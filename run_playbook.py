import subprocess
import argparse
import os
from datetime import datetime


def apply(playbook, args):
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    ansible_log = (
        f"ansible_{os.path.basename(playbook)}_{timestamp}_{args.tag.upper()}.log"
    )

    cmd = [
        "ansible-playbook",
        f"{os.getcwd()}/{playbook}",
        "-v",
    ]

    if hasattr(args, "tag"):
        cmd.extend(["--tag", args.tag])

    if hasattr(args, "host"):
        inv_file_name = "inventory.ini"
        host = args.host
        warn = ";THIS FILE AUTOGENERATED BY SCRIPT! CHANGES NOT BEEN SAVE![server]"
        if host in ["local", "127.0.0.1"]:
            inv = f"{warn}\n[server]\n127.0.0.1 ansible_connection=local"
        else:
            inv = f"{warn}\n[server]\n{args.host} ansible_ssh_private_key_file={args.ssh_key}"
        with open(inv_file_name, "w") as f:
            f.write(inv)
        cmd.extend(["-i", inv_file_name])

    if hasattr(args, "v"):
        print(" ".join(cmd))

    os.makedirs("out", exist_ok=True)

    with open(f"out/{ansible_log}", "w") as f:
        f.write("LOG GENERATED BY SCRIPT!")
    with open(f"out/{ansible_log}", "w+") as log_file:
        result = subprocess.run(
            cmd,
            stdout=log_file,
            stderr=subprocess.STDOUT,
            text=True,
        )

    return result.returncode


parser = argparse.ArgumentParser(description="Automation for RunPlaybook")
parser.add_argument("--dry-run", action="store_true", help="enable dry run mode")
parser.add_argument("--force", action="store_true", help="skip check configuration")
parser.add_argument("-v", action="store_true", help="verbose output")
parser.add_argument("--tag", required=True, help="ansible role tag")
parser.add_argument("--host", required=True, help="ansible remote host")
parser.add_argument("--ssh-key", default="~/.ssh/id_rsa", help="path to ssh key file")
# parser.add_argument("-p", default="playbook", help="playbook name")

if __name__ == "__main__":
    args = parser.parse_args()
    if args.tag == "init":
        apply("ansible/init.yml", args)
    else:
        apply("ansible/deploy.yml", args)
